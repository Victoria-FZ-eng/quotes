/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.*;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class App {
    public String getGreeting() {
        return "Hello from lab08 & lab09";
    }

    public static ArrayList<String> quotes= new ArrayList<String>();

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

//--------------------------lab 08---------------------
        ArrayList<String> quotes = convertingJsonFile("recentquotes.json");
        randomQuote(quotes);


  //------------------------------lab 09---------------------------------

        httpRequestQuote("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");

    }
    //--------------------------lab 08---------------------
    public static ArrayList<String> convertingJsonFile(String path){
        File file = new File(path);
        ArrayList<String> quotes= new ArrayList<String>();
        try {
            JsonElement fileQuote = JsonParser.parseReader(new FileReader(file));
            // get Json array
            JsonArray quotesArray = fileQuote.getAsJsonArray();
            //    System.out.println(quotesArray);
            // convert Json array
            for (JsonElement jsonElement : quotesArray) {

                JsonObject quoteObj = jsonElement.getAsJsonObject();

                JsonArray tagsArr = quoteObj.getAsJsonArray("tags");
                // System.out.println(tagsArr);
                ArrayList<String> tags = new ArrayList<String>();
                for (JsonElement element : tagsArr) {
                    tags.add(element.getAsString()) ;
                }
                // System.out.println(tags);

                String author = quoteObj.get("author").getAsString();
                String likes = quoteObj.get("likes").getAsString();
                String text = quoteObj.get("text").getAsString();

                //  System.out.println(author);
                Quotes quote = new Quotes(tags,author,likes,text);
                quotes.add(quote.toString());
            }
            //  System.out.println("Array list-Json converted : "+quotes);

        }
        catch (FileNotFoundException e) {
            e.printStackTrace();
        }

      //  System.out.println(quotes);
        return quotes;
    }

    public static String randomQuote(ArrayList<String> q){
        int idx = (int) (Math.random()*q.size());
        System.out.println("Json File "+q.get(idx));
        return q.get(idx);
    }

    //------------------------------lab 09---------------------------------

    public static String httpRequestQuote(String s){
        String api = s;
        String qr =null;

        try {
            URL url = new URL(api);
            HttpURLConnection connect = (HttpURLConnection) url.openConnection();
            connect.setRequestMethod("GET");
            connect.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");

//            HttpClient client = HttpClient.newHttpClient();
//            HttpRequest request = HttpRequest.newBuilder().uri(URI.create(api)).build();
//           client.sendAsync(request, HttpResponse.BodyHandlers.ofString()).thenApply(HttpResponse::body).thenAccept(System.out::println).join();
//


            int status = connect.getResponseCode();
           // System.out.println(status);
            if(status == 200){
                InputStream inputStr = connect.getInputStream();
                InputStreamReader inputStrReader = new InputStreamReader(inputStr);
                BufferedReader bufferedReader = new BufferedReader(inputStrReader);

                Gson gson = new Gson();

                Quotes q = gson.fromJson(bufferedReader,Quotes.class);
                quotes.add(q.toString2());
                System.out.println(q.toString2());
                qr=q.toString2();

              //  String line = bufferedReader.readLine();

              //  System.out.println(connect.getHeaderField("quoteText"));

//                System.out.println(line);
//                while(line != null){
//                    // building a string   s = s+buffreedReader.readLine();   StringBuilder
//                    System.out.println(line);
//                    line = bufferedReader.readLine();
                 //   System.out.println(line);
             //   }

            bufferedReader.close();
            } else{
                System.out.println("An error occurred with status "+status);
            }

            connect.disconnect();
        }
        catch (Exception e){

            ArrayList<String> quotes = convertingJsonFile("recentquotes.json");
            randomQuote(quotes);
//            e.printStackTrace();
            System.out.println("Error: "+ e);
        }


        return qr;
    }
}
